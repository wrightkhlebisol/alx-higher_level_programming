>>> add_integer = __import__('0-add_integer').add_integer
>>> add_integer(1, 98)
99
>>> add_integer(0, 98)
98
>>> add_integer(0.0, 98)
98.0
>>> add_integer(0.0, 98.0)
98.0
>>> add_integer(12, 98)
110
>>> add_integer('12', 98)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/Users/re_wrighting/projects/ALX/alx-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 7, in add_integer
    return a + b
           ~~^~~
TypeError: can only concatenate str (not "int") to str
>>> add_integer(12, '98')
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/Users/re_wrighting/projects/ALX/alx-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 7, in add_integer
    return a + b
           ~~^~~
TypeError: unsupported operand type(s) for +: 'int' and 'str'
>>> add_integer('12', '98')
'1298'
